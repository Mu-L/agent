logging {
    level = "debug"
}
prometheus.scrape "scraper" {
    targets = concat([{"__address__" = "localhost:12347"}])
    forward_to = [prometheus.relabel.mutator.receiver]
    scrape_interval = "15s"
}


prometheus.relabel "mutator" {
    rule {
        source_labels = ["__name__"]
        regex = "(.+)"
        replacement = "stream"
        target_label = "runtype"
    }
    rule {
        source_labels = ["__name__"]
        regex = "(.+)"
        replacement = env("METRIC_COUNT")
        target_label = "metric_length"
    }
    rule {
        source_labels = ["__name__"]
        regex = "(.+)"
        replacement = env("ALLOW_WAL")
        target_label = "allow_wal"
    }
rule {
       source_labels = ["__name__"]
       action = "keep"
       regex = "(process_cpu_seconds_total|go_memstats_alloc_bytes|go_gc_duration_seconds_sum|go_gc_duration_seconds_count)"
    }

    forward_to = [prometheus.remote.stream.agent_stats.receiver]
}

prometheus.remote.stream "agent_stats" {
    endpoint {
        url = "https://prometheus-us-central1.grafana.net/api/prom/push"
        basic_auth {
            username = env("PROM_USERNAME")
            password = env("PROM_PASSWORD")
        }
    }
}

// docker run -p 9001:9001 quay.io/freshtracks.io/avalanche --metric-count=10000

prometheus.scrape "avalanche" {
    targets = concat([{"__address__" = "localhost:9001"}])
    forward_to = [prometheus.remote.stream.empty.receiver]
    scrape_interval = "15s"
}

prometheus.remote.stream "empty" {
    endpoint {
        url = "http://localhost:8888/post"
    }
}

